## ~/.bash_profile

# Ideally terminal multiplexers like screen or tmux could be set as your unix
# login shell, directly started by whatever login mechanism you have.
# Unfortunately many times it is impossible to change your login shell (e.g.
# in restrictive work environments) so here we do the following:
#
#   * start the desired terminal multiplexer via bash first
#   * but make sure we don't overdo it, i.e.
#     no infinite recursion of bash-multiplexer-bash-...
#
# Practically speaking you should configure your preferred multiplexer that it
# never starts _login_ shells.
#
# Here we prefer starting the multiplexers that:
#
#   * they try to attach to an existing session
#   * if there's no session to attach to, then create a new session
#   * in case we could attach, detach all other clients

if
    shopt -q login_shell &&  # login shell
    [[ $- =~ i ]]        &&  # interactive shell
    test "$TERM"         &&  # terminal type is set
    tty --silent             # attached terminal

then
    echo >&2 "Select initial program to run!"

    select start in "bash" "screen" "x"
    do
        break
    done

    # Start with a controlled environment.
    ENV=" \
        HOME=$HOME \
        DISPLAY=$DISPLAY \
        LANG=$LANG \
        LANGUAGE=$LANGUAGE \
        LOGNAME=$LOGNAME \
        TERM=$TERM \
        USER=$USER \
        "

    case "$start" in

        bash)
            # Do nothing since we already run bash.
            ;;

        screen)
            exec env - $ENV screen -xdR
            ;;

        x)
            # If you have authorization problems see:
            #   * /etc/X11/Xwrapper.config
            #   * dpkg-reconfigure x11-common
            env - $ENV xinit &
            logout
            ;;

        *)
            echo >&2 "${BASH_SOURCE[0]}: no such menu item: $REPLY"
            echo >&2 "${BASH_SOURCE[0]}: starting bash instead"
            # Do nothing since we already run bash.
            ;;

    esac

fi

if [ -r "$HOME"/.bashrc ]
then
    . "$HOME"/.bashrc
fi
